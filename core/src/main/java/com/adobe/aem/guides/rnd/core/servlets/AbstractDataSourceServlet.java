package com.adobe.aem.guides.rnd.core.servlets;import com.adobe.granite.ui.components.ds.ValueMapResource;import org.apache.commons.lang3.StringUtils;import org.apache.sling.api.SlingHttpServletRequest;import org.apache.sling.api.SlingHttpServletResponse;import org.apache.sling.api.resource.Resource;import org.apache.sling.api.resource.ResourceResolver;import org.apache.sling.api.resource.ValueMap;import org.apache.sling.api.servlets.SlingSafeMethodsServlet;import org.apache.sling.api.wrappers.ValueMapDecorator;import javax.jcr.RepositoryException;import javax.servlet.ServletException;import java.io.IOException;import java.util.HashMap;import java.util.List;public abstract class AbstractDataSourceServlet<T> extends SlingSafeMethodsServlet {    private static final String DATASOURCE_TEXT = "text";    private static final String DATASOURCE_VALUE = "value";    @Override    protected abstract void doGet(SlingHttpServletRequest request, SlingHttpServletResponse response) throws ServletException, IOException;    protected abstract List<Resource> convertObjectsToResources(ResourceResolver resourceResolver, List<T> objects) throws RepositoryException;    protected Resource createDataSourceElement(ResourceResolver resolver, String key, String value) {        ValueMap valueMap = new ValueMapDecorator(new HashMap<>());        valueMap.put(DATASOURCE_VALUE, key);        valueMap.put(DATASOURCE_TEXT, value);        return new ValueMapResource(resolver, StringUtils.EMPTY, StringUtils.EMPTY, valueMap);    }}